{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.1.18-oss",
    "title" : "grm-edge-service Service"
  },
  "basePath" : "/",
  "tags" : [ {
    "name" : "management"
  }, {
    "name" : "routeInfo"
  }, {
    "name" : "serviceEndPoint"
  } ],
  "paths" : {
    "/add" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Add",
        "description" : "Add a new service or pod",
        "operationId" : "add",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/delete" : {
      "delete" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Delete",
        "description" : "Delete a service or pod from cache",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/findAllEps" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Find All Endpoints",
        "description" : "Returns a list of endpoints registered to the service requested",
        "operationId" : "findAllEps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    },
    "/findRunning" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Get Find Running Endpoints",
        "description" : "Returns a list of endpoints registered to the service requested",
        "operationId" : "findRunning",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    },
    "/get" : {
      "post" : {
        "tags" : [ "routeInfo" ],
        "summary" : "Get RouteInfo for a service",
        "description" : "Returns the routeinfo for a service requested by DME",
        "operationId" : "getRouteInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRouteInfoResponse"
            }
          }
        }
      }
    },
    "/getAll" : {
      "get" : {
        "tags" : [ "routeInfo" ],
        "summary" : "Get all RouteInfo",
        "description" : "Returns all the routeinfo in cache",
        "operationId" : "getAllRouteInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/getFromCache" : {
      "get" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Get Endpoints From Cache",
        "description" : "Returns a list of endpoints from the cache. This should be used for debugging purposes.",
        "operationId" : "getFromCache",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "serviceName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "*"
        }, {
          "name" : "env",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    },
    "/management/refreshCacheWithAPIServer" : {
      "get" : {
        "tags" : [ "management" ],
        "summary" : "Refresh the Cache with Data from the API Server",
        "description" : "Run this method if you are missing endpoints that should be there from the API server. This indicates an issue has occured with GRMEdge and should be reported. Running this method should resolve your issue at least temporarily.",
        "operationId" : "refreshCacheWithAPIServer",
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/refreshCacheWithAPIServer" : {
      "get" : {
        "tags" : [ "management" ],
        "summary" : "Refresh the Cache with Data from the API Server",
        "description" : "Run this method if you are missing endpoints that should be there from the API server. This indicates an issue has occured with GRMEdge and should be reported. Running this method should resolve your issue at least temporarily.",
        "operationId" : "refreshCacheWithAPIServer",
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/routeInfo/get" : {
      "post" : {
        "tags" : [ "routeInfo" ],
        "summary" : "Get RouteInfo for a service",
        "description" : "Returns the routeinfo for a service requested by DME",
        "operationId" : "getRouteInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRouteInfoResponse"
            }
          }
        }
      }
    },
    "/routeInfo/getAll" : {
      "get" : {
        "tags" : [ "routeInfo" ],
        "summary" : "Get all RouteInfo",
        "description" : "Returns all the routeinfo in cache",
        "operationId" : "getAllRouteInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/serviceEndPoint/add" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Add",
        "description" : "Add a new service or pod",
        "operationId" : "add",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/serviceEndPoint/delete" : {
      "delete" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Delete",
        "description" : "Delete a service or pod from cache",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/serviceEndPoint/findAllEps" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Find All Endpoints",
        "description" : "Returns a list of endpoints registered to the service requested",
        "operationId" : "findAllEps",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    },
    "/serviceEndPoint/findRunning" : {
      "post" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Get Find Running Endpoints",
        "description" : "Returns a list of endpoints registered to the service requested",
        "operationId" : "findRunning",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    },
    "/serviceEndPoint/getFromCache" : {
      "get" : {
        "tags" : [ "serviceEndPoint" ],
        "summary" : "Get Endpoints From Cache",
        "description" : "Returns a list of endpoints from the cache. This should be used for debugging purposes.",
        "operationId" : "getFromCache",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FindRunningServiceEndPointResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "FindRunningServiceEndPointResponse" : {
      "type" : "object",
      "properties" : {
        "serviceEndPointList" : {
          "type" : "array",
          "xml" : {
            "name" : "ServiceEndPointList"
          },
          "items" : {
            "$ref" : "#/definitions/ServiceEndPoint"
          }
        }
      },
      "xml" : {
        "name" : "findRunningServiceEndPointResponse"
      }
    },
    "GetRouteInfoResponse" : {
      "type" : "object",
      "required" : [ "routeInfoXml" ],
      "properties" : {
        "routeInfoXml" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "getRouteInfoResponse"
      }
    },
    "NameValuePair" : {
      "type" : "object",
      "properties" : {
        "valueFormatted" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        },
        "value" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    },
    "OperationalInfo" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "createdTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "updatedTimestamp" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ServiceEndPoint" : {
      "type" : "object",
      "required" : [ "hostAddress", "name", "version" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "version" : {
          "$ref" : "#/definitions/VersionDefinition"
        },
        "hostAddress" : {
          "type" : "string"
        },
        "listenPort" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "registrationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expirationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "contextPath" : {
          "type" : "string"
        },
        "routeOffer" : {
          "type" : "string"
        },
        "containerVersionDefinitionName" : {
          "type" : "string"
        },
        "statusInfo" : {
          "$ref" : "#/definitions/StatusInfo"
        },
        "eventStatusInfo" : {
          "$ref" : "#/definitions/StatusInfo"
        },
        "validatorStatusInfo" : {
          "$ref" : "#/definitions/StatusInfo"
        },
        "operationalInfo" : {
          "$ref" : "#/definitions/OperationalInfo"
        },
        "protocol" : {
          "type" : "string",
          "default" : "http"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NameValuePair"
          }
        },
        "clientSupportedVersions" : {
          "type" : "string"
        },
        "dme2Version" : {
          "type" : "string",
          "xml" : {
            "name" : "DME2Version"
          }
        },
        "dme2JDBCDatabaseName" : {
          "type" : "string",
          "xml" : {
            "name" : "DME2JDBCDatabaseName"
          }
        },
        "dme2JDBCHealthCheckUser" : {
          "type" : "string",
          "xml" : {
            "name" : "DME2JDBCHealthCheckUser"
          }
        },
        "dme2JDBCHealthCheckPassword" : {
          "type" : "string",
          "xml" : {
            "name" : "DME2JDBCHealthCheckPassword"
          }
        },
        "dme2JDBCHealthCheckDriver" : {
          "type" : "string",
          "xml" : {
            "name" : "DME2JDBCHealthCheckDriver"
          }
        },
        "disableType" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "HEARTBEAT", "DISCOVER" ]
          }
        }
      }
    },
    "StatusInfo" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "enum" : [ "CONFIGURED", "RUNNING", "UNHEALTHY", "UNKNOWN" ]
        },
        "statusReasonCode" : {
          "type" : "string"
        },
        "statusReasonDescription" : {
          "type" : "string"
        },
        "statusCheckTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "VersionDefinition" : {
      "type" : "object",
      "properties" : {
        "major" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "minor" : {
          "type" : "integer",
          "format" : "int32",
          "xml" : {
            "attribute" : true
          }
        },
        "patch" : {
          "type" : "string",
          "xml" : {
            "attribute" : true
          }
        }
      }
    }
  }
}